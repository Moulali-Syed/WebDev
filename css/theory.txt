CSS - cascading style sheets
css describes how HTML elements are to be displayed on screen , paper or in other media
HTML - what to display
CSS  - How to Display 
==========================================
css syntax:

selector {
    propertyName : value;
}

p{
    color:red;
}
==========================================
How to add CSS
External CSS |  Internal CSS  |  Inline CSS 

1.add external css file
 create a file style.css
and in html file link that css file
<link rel="stylesheet" href="./style.css" />
we can add and link any number of external files , last file gets more priority

2.Internal CSS 
 inside head tag write the style tag
  <style>
      p {
        color: blue;
      }
    </style>

3.Inline CSS 
  <p style="color: green; font-size: 12px">Paragraph 3</p>
==========================================
CSS Selectors:
 we have 3 main Selectors
 1.element selector
    p{
      color:red;
    }

 2.id selector

    <p id="p3">paragraph</p>
    #p3 {
    color: yellowgreen;
    }
    only one id per element

 3.class selector
    <p class="colo">paragraph</p>
    .colo {
      color: blue;
    }
    we can have any number of classes in a element

<p class="colo underline" id="p1">Paragraph</p>

order:
    id > class > element
==========================================
Comments in CSS:
/*  comment here  */

==========================================
Colors:
in css colors can be specified using
Predefined color names
RGB
RGBA
HEX
HSL
HSLA

modern browsers support 140 named colors
we can see colors from https://htmlcolorcodes.com/color-names/

RGB:
red,green,blue
color value between 0 and 255
black - rgb(0,0,0)
white - rgb(255,255,255)
red - rgb(255,0,0)
blue - rgb(0,0,255)
green - rgb(0,255,0)

RGBA
red,green,blue,alpha
aplha parameter is a number between 0.0(fully transparent) and 1.0 (not transparent at all)
rgba(255,99,71,0.5)

HEX:
#rrggbb
hexadecimal values between 00 and ff(same as decimal 0-255)
red : #ff0000
black : #000000
white : #ffffff

HSL
hue,saturation , lightness
hue is degree on color wheel from 0 to 360 . 0 is red ,120 is green , 240 is blue
saturation is a percentage value ,0% means a shade of grey and 100% is full color
lightness is also percentage , 0% is black , 50% is neither light or dark , 100% is white
RED: hsl(0,100%,50%)

HSLA:
hue,saturation , lightness , alpha
alpha parameter is a number between 0.0(fully transparent) and 1.0 (not transparent at all)
hsla(0,100%,50%,0.5)
==========================================
Backgrounds:

Which ever element has a height and width we can change its background

    #bg {
        background-color: blue;
       }

background image:
    #bg {
        background-image: url('./image.png');
        /* this will repeat image multiple times to fit the element width and height */
      }

           #bg {
        background-image: url('./image.png');
        /* this will repeat image multiple times to fit the element width and height */
        background-repeat: no-repeat;
        /* to not repeat image use no-repeat */
      }
        #bg {
        background-image: url('./image.png');
        /* this will repeat image multiple times to fit the element width and height */
        background-repeat: repeat-x;
        /* to not repeat image on x-axis only */
      }
      similarly to repeat on y-axis , use background-repeat: repeat-y;
      default is repeat , which repeats image on both x,y axis
            #bg {
        background-image: url('./image.png');
        /* this will repeat image multiple times to fit the element width and height */
        background-repeat: no-repeat;
        /* to not repeat image  */
        background-position: right top;
        /* this displays image on top right corner, we can provide different values like center center | right center |... */
      }

       #bg {
        background-image: url('./image.png');
        /* this will repeat image multiple times to fit the element width and height */
        background-repeat: no-repeat;
        /* to not repeat image  */
        background-position: right top;
        /* this displays image on top right corner, we can provide different values like center center | right center |... */
        background-size: 100% 100%;
        /* fills the image size to full length and width of container */

        background-attachment: fixed;
        /* this makes image fixed , means only content will move but not image */
      }

           #bg {
        background-size: 100% 100%;
        /* background image will  */
        background-size: cover;
        /* this will cover entire container width and height , but this will cut the backgroundimage better use for patterns */

        background-size: contain;
        /* container and image ratio must be same when using contain */
      }

      shortcut background
      #bg {
        background: #fff url('./image.png') no-repeat fixed 5% 10%;
      }

multiple Backgrounds

  #bg {
        background-color: yellow;
        background-image: url('./image.png');
        background-repeat: no-repeat;
        background-size: cover;
      }

     #bg {
        background-color: yellow;
        background-image: url('./image.png'), url('./image.png');
        background-repeat: no-repeat;
        background-position: left top, right bottom;
      }

==========================================
Borders:
  #border {
        border-style: solid;
        border-style: dotted;
        border-style: dashed;

        border-style: double;
        /* creates a frame */
        border-style: groove;
        border-style: ridge;
        border-style: inset;
        border-style: outset;
        /* default is none */
        border-style: none;
        /* we must define border color , border width */

        /* top right bottom left - clockwise */
        border-style: solid dashed none dotted;

        /* 1st-top,bottom  2nd - left,right */
        border-style: solid dotted;

        border-width: 5px;
        border-width: 5px 10px;
        border-width: 2px 4px 6px 8px;

        border-color: red;
        /* 1st- top  , 2nd-left,right , 3rd-bottom */
        border-color: red green blue;

        border: 5px solid green;

        border-top-style: solid;
        border-top-width: 10px;
        border-top-color: red;

        /* to curve border */
        border-radius: 10px;

        /* to make circle */
        border-radius: 50%;

        border-radius: 10px 20px;
      }

==========================================
CSS Height and width:

      #div1 {
        background-color: blueviolet;
        height: 500;
        /* 70% of width means , it will occupy 70% of its parent element width */
        width: 70%;
        /* this will restrict width to 500px */
        max-width: 500px;
        /* restricts max height */
        max-height: 300px;
        min-width: 300px;
        min-height: 300px;
      }

=============================================
CSS Padding:
gap between border and content
      #div1 {
        border: 1px solid red;
        padding: 50px;
        padding-top: 50px;
        padding-bottom: 20px;
        padding-right: 80px;
        padding-left: 20%;
      }

=======================================
CSS Margins:
space between elements

      #div1 {
        margin-top: 50px;
        margin-bottom: 20px;
        margin-left: 60px;
        margin-right: 10%;

        margin: 25px;

        /* to  make horizontal center */
        margin: 20px auto;

        /* margin collapse */
        /* means whichever is highest margin it will be applied , but not the combined sum of margin */
      }

==========================================
Box Model:

margin
  border  
      padding
------------  content--------

When you set the width and height properties of an element with CSS , you just
set the width and height of content area .to calculate the full size of an element
you must also add padding , borders and margins  
Total element width = width + left padding + right padding + left border + right border + left margin + right margin
Total element height = height + top padding + bottom padding + top border + bottom border + top margin + bottom margin
==========================================
CSS Text:
      #text {
        /* to change text color */
        color: blue;

        /* to align text */
        /* by default is left , we can align it right , center */
        text-align: center;

        /* like newspaper , content will be spread all the width and height */
        text-align: justify;
        /* change direction */
        direction: rtl;

        /* decorate text */
        /* by default text decoration is null */
        text-decoration: underline;
        /* we can use overline , underline , line-through */

        /* text transform */
        text-transform: uppercase;
        /* lowercase , Capitalize */

        line-height: 1.4;
        letter-spacing: 2px;
        word-spacing: 3px;

        /* if we want the behavior of pre tag thru css use below */
        white-space: pre;
        white-space: nowrap;

        /* if we have a word that is too long and going out of the container body , use word-wrap:break-word */
        word-wrap: break-word;

        /* text shadow */
        font-size: 70px;
        /* horizontal | move up down , if given negative moves up | blur | color */
        text-shadow: 5px 10px 5px red;

        /* to change writing to vertical */
        writing-mode: vertical-lr;
        /* vertical-rl */
      }
      /* if we have an image and we want to place it in between text content and style it then use below */
      img {
        border: 1px solid red;
        /* vertical align : top|middle */
        vertical-align: middle;
      }
==========================================
CSS Links:
must follow LVHA order while styling link
      a {
        text-decoration: none;
      }
      a:link {
        color: yellowgreen;
      }
      a:visited {
        color: black;
      }
      a:hover {
        color: orange;
      }
      a:active {
        color: red;
      }

==========================================
Fonts:
   p {
        font-size: 30px;
        font-weight: bold;
        font-weight: 300;
        font-style: italic;
        font-variant: small-caps;
        
      }

goto google fonts

include the required font link in the html - head tag
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Roboto:wght@100;400&display=swap" rel="stylesheet">

Then in css use that
font-family: 'Roboto', sans-serif;


or we can download a font and use it as below by css
@font-face{
    font-family:abc;
    src:url('fonts/Aclonica.ttf');
}
use as below
h1{
  font-family:abc;
}

shorthand:
font: italic small-caps bold 20px sans-serif;

==========================================
CSS Units:
We use length in width , height , margin ,padding , font-size

There are two types of units in css
a.Absolute
b.Relative

Absolute                Relative
Cm                      Em , Rem , Vh ,Vw , %
Mm ,Inch ,px,pt,pc


absolute units in css
cm , mm , in , px(1inch=96px) , pt(1inch=72pt) ,pc (1pc=12pt)

relative units
em - em is relative to size of its direct parent
if parent has 10 px and we assign 2em - then it will become 20px

rem - rem is relative to root (html tag) size

vh - 1% of view port height
vw - 1% of viewport width 

% - relative to parent
==========================================
      /* a {
        text-decoration: none;
      }
      a:link {
        color: yellowgreen;
      }
      a:visited {
        color: black;
      }
      a:hover {
        color: orange;
      }
      a:active {
        color: red;
      }
      p {
        font-size: 30px;
        font-weight: bold;
        font-weight: 300;
        font-style: italic;
        font-variant: small-caps;
      } */

      #parent {
        border: 1px solid red;
        /* width: 100mm; */
        /* width: 5in; */
        /* width: 500px;
        width: 500pt; */
        /* width: 500pc; */

        /* width: 800px; */
        /* based on viewport height and width */
        /* height: 50vh;
        width: 50vw; */

        font-size: 30px;
      }
      #child {
        border: 1px solid blue;
        /* 50% of parent div - 400px */
        /* width: 50%; */
        /* 2*parentFontSize = 2*30 =60px */
        font-size: 2em;
      }

      html {
        font-size: 10px;
      }
      #child {
        /* 2*htmlFontSize = 2*10=20px */
        font-size: 2rem;
      }

      #child {
        /* if u want to change font based on width of screen then use vw , if based on height use  vh */
        font-size: 4vw;
      }

==========================================
CSS Cursor:
      #cur {
        border: 10px solid red;

        /* default */
        cursor: auto;
        /*  display cursor as  arrow on 4 sides of + */
        cursor: all-scroll;

        /* display + */
        cursor: cell;
        /* display cursor as  <-||->*/
        cursor: col-resize;
        /* crosshair , + symbol */
        cursor: crosshair;
        /* <-> */
        cursor: e-resize;
        /* hand */
        cursor: grab;
        /* pointer with question mark */
        cursor: help;
        /* not allowed symbol */
        cursor: not-allowed;
        /* hand same as on link */
        cursor: pointer;
        /* progress */
        cursor: progress;
        /* wait  */
        cursor: wait;
        cursor: zoom-in;
      }
==========================================
important
 border: 10px solid red !important;
==========================================
CSS Box shadow:
      div {
        border: 1px solid green;
        width: 500px;
        background-color: yellowgreen;
        margin: 100px;
        padding: 20px;

        /* box-shadow :  x y blur spread color */
        box-shadow: 10px 10px 5px 3px grey;
        /* to get shadow inside  */
        /* box-shadow :  x y blur spread color inset*/
        box-shadow: 10px 10px 5px 3px grey inset;

        /* multiple shadow*/
        /* negative x , y values will behave in opposite shadow */
        box-shadow: 10px 10px 5px 3px grey, -10px -10px 5px 3px pink;
      }

==========================================
CSS Opacity:
      #color-box {
        background-color: green;
        height: 200px;
        width: 500px;
        margin-bottom: 20px;
        /* opacity 0 - will become invisible , we can give any value between 0 to 1 */
        opacity: 0.5;
      }
      img:hover {
        opacity: 0.7;
      }
      #red-box {
        height: 300px;
        width: 200px;
        background-color: red;
        margin-top: -100;
        /* to make transparent we can use opacity */
        opacity: 0.5;
      }

==========================================
CSS Filter:
filter will be applied to image

     img {
        filter: blur(10px);
        filter: brightness(50%);
        filter: contrast(70%);
        /* we can apply shadow thru box-shadow */
        filter: drop-shadow(8px 8px 5px red);

        /* make blackNwhite */
        filter: grayscale(50%);

        filter: hue-rotate(90deg);

        filter: invert(100%);

        filter: opacity(30%);
        filter: saturate(30%);
        filter: sepia(30%);

        /* we can apply multiple properties by comma seperated */
        filter: brightness(80%), contrast(100%);
      }

==========================================
Image sprites:
suppose we have 3 flag images in single image , but we can use 3 flags seperately
can be used as background images only
when we have small images in our website , we can combine them and use it as background images

   #sprite {
        height: 64px;
        background-image: url('./image.png');
        background-repeat: no-repeat;
        background-position: 0px -143px;
      }

      by changing background-position we can change the image to get displayed
==========================================
CSS Gradients:
mixing 2 colors smoothly
we have 2 types
linear , radial gradients

      #gradient {
        height: 500px;
        border: 1px solid grey;
        /* background-image: linear-gradient(green, blue); */
        /* default direction is top to bottom */
        background-image: linear-gradient(green, red, blue);
        /* to change direction */
        background-image: linear-gradient(to right, green, red, blue);
        background-image: linear-gradient(to bottom right, green, red, blue);
        background-image: linear-gradient(160deg, green, red, blue);

        /* by default shape is eclipse */
        background-image: radial-gradient(blue, red);
        background-image: radial-gradient(green, blue, red);
        /* we can specify shape */
        background-image: radial-gradient(circle, blue, red);
        /* we can specify the color with its respective percentage of occupied area */
        background-image: radial-gradient(circle, green 20%, blue 30%, red 50%);
      }

==========================================
CSS Overflow:

content is beyond the container , we can control that using overflow 
when we dont want to change container height , but want to display its content beyond container height

      #overflow {
        background-color: whitesmoke;
        border: 1px solid red;
        width: 500px;
        height: 300px;
        /* default */
        overflow: visible;
        /* we can hide overflow content */
        overflow: hidden;
        /*we can create a scroll within container  */
        overflow: scroll;
        /* we have overflow-x and overflow-y specific to direction */
        overflow-x: hidden;
        overflow-y: scroll;

        /* we have overflow auto , so that scroll bar comes based on content */
        overflow: auto;
      }

==========================================
CSS Resizable:

      textarea {
        /* textarea by default is resizable , we can set it to none */
        resize: none;
      }
      #overflow {
        resize: both;
        resize: horizontal;
        resize: vertical;
      }

==========================================
CSS Lists:
      ul {
        list-style-type: none;
        list-style-type: circle;
        list-style-type: disc;
        list-style-type: square;

        list-style-image: url('./image.png');

        /* default is outside */
        list-style-position: outside;
        list-style-position: inside;
      }
      ol {
        list-style-type: lower-alpha;
        list-style-type: upper-alpha;
        list-style-type: lower-roman;
        list-style-type: upper-roman;
        list-style-type: decimal;
        list-style-type: decimal-leading-zero;
      }
      li {
        border: 1px solid black;
      }

==========================================
CSS Tables:






==========================================







==========================================










==========================================








==========================================







==========================================







==========================================








==========================================








==========================================







==========================================







==========================================